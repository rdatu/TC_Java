class NumericFns<T extends Number>{
	T num;
	NumericFns(T n){
		num = n;
	}
	double reciprocal(){
		return 1/num.doubleValue();
	}
	double fraction(){
		return num.doubleValue() - num.intValue();
	}
	boolean absEqual(NumericFns<?> ob){
			if(Math.abs(num.doubleValue()) == Math.abs(ob.num.doubleValue())) return true;
			return false;
	}

}
class WildcardDemo{
	public static void main(String args[]){
		NumericFns<Integer> iOb = new NumericFns<Integer>(6);
		NumericFns<Double> dOb = new NumericFns<Double>(-6.0);
		NumericFns<Long> lOb = new NumericFns<Long>(5L);

		System.out.println("Testing iOb and dOb.");
		if (iOb.absEqual(dOb))
			System.out.println("Absolute value s are equal.");
		else
			System.out.println("Absilute values differ.");

		System.out.println();
		System.out.println("Testing iOb and lOb");
		if(iOb.absEqual(l0b))
			System.out.println("Absolute Values are equal");
		else
			System.out.println("Absoute Values differ.");
	}	
}
